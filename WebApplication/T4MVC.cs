// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
#pragma warning disable 1591, 3008, 3009
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly adminClass s_admin = new adminClass();
    public static adminClass admin { get { return s_admin; } }
    public static WebApplication.Controllers.AccountController Account = new WebApplication.Controllers.T4MVC_AccountController();
    public static WebApplication.Controllers.CartController Cart = new WebApplication.Controllers.T4MVC_CartController();
    public static WebApplication.Controllers.CategoryController Category = new WebApplication.Controllers.T4MVC_CategoryController();
    public static WebApplication.Controllers.CommentController Comment = new WebApplication.Controllers.T4MVC_CommentController();
    public static WebApplication.Controllers.CompanyController Company = new WebApplication.Controllers.T4MVC_CompanyController();
    public static WebApplication.Controllers.ContactUsController ContactUs = new WebApplication.Controllers.T4MVC_ContactUsController();
    public static WebApplication.Controllers.ErrorController Error = new WebApplication.Controllers.T4MVC_ErrorController();
    public static WebApplication.Controllers.FavoriteController Favorite = new WebApplication.Controllers.T4MVC_FavoriteController();
    public static WebApplication.Controllers.HomeController Home = new WebApplication.Controllers.T4MVC_HomeController();
    public static WebApplication.Controllers.LayoutController Layout = new WebApplication.Controllers.T4MVC_LayoutController();
    public static WebApplication.Controllers.PackageController Package = new WebApplication.Controllers.T4MVC_PackageController();
    public static WebApplication.Controllers.ProductController Product = new WebApplication.Controllers.T4MVC_ProductController();
    public static WebApplication.Controllers.RssController Rss = new WebApplication.Controllers.T4MVC_RssController();
    public static WebApplication.Controllers.SaleController Sale = new WebApplication.Controllers.T4MVC_SaleController();
    public static WebApplication.Controllers.SearchController Search = new WebApplication.Controllers.T4MVC_SearchController();
    public static WebApplication.Controllers.SitemapController Sitemap = new WebApplication.Controllers.T4MVC_SitemapController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class adminClass
    {
        public readonly string Name = "admin";
        public WebApplication.Areas.admin.Controllers.BlockController Block = new WebApplication.Areas.admin.Controllers.T4MVC_BlockController();
        public WebApplication.Areas.admin.Controllers.CategoryController Category = new WebApplication.Areas.admin.Controllers.T4MVC_CategoryController();
        public WebApplication.Areas.admin.Controllers.CityController City = new WebApplication.Areas.admin.Controllers.T4MVC_CityController();
        public WebApplication.Areas.admin.Controllers.CombinationController Combination = new WebApplication.Areas.admin.Controllers.T4MVC_CombinationController();
        public WebApplication.Areas.admin.Controllers.CommentController Comment = new WebApplication.Areas.admin.Controllers.T4MVC_CommentController();
        public WebApplication.Areas.admin.Controllers.CompanyController Company = new WebApplication.Areas.admin.Controllers.T4MVC_CompanyController();
        public WebApplication.Areas.admin.Controllers.ContactUsController ContactUs = new WebApplication.Areas.admin.Controllers.T4MVC_ContactUsController();
        public WebApplication.Areas.admin.Controllers.HomeController Home = new WebApplication.Areas.admin.Controllers.T4MVC_HomeController();
        public WebApplication.Areas.admin.Controllers.LabelController Label = new WebApplication.Areas.admin.Controllers.T4MVC_LabelController();
        public WebApplication.Areas.admin.Controllers.ManageController Manage = new WebApplication.Areas.admin.Controllers.T4MVC_ManageController();
        public WebApplication.Areas.admin.Controllers.OrderController Order = new WebApplication.Areas.admin.Controllers.T4MVC_OrderController();
        public WebApplication.Areas.admin.Controllers.PackageController Package = new WebApplication.Areas.admin.Controllers.T4MVC_PackageController();
        public WebApplication.Areas.admin.Controllers.ProductController Product = new WebApplication.Areas.admin.Controllers.T4MVC_ProductController();
        public WebApplication.Areas.admin.Controllers.ProvinceController Province = new WebApplication.Areas.admin.Controllers.T4MVC_ProvinceController();
        public WebApplication.Areas.admin.Controllers.SaleController Sale = new WebApplication.Areas.admin.Controllers.T4MVC_SaleController();
        public WebApplication.Areas.admin.Controllers.SettingController Setting = new WebApplication.Areas.admin.Controllers.T4MVC_SettingController();
        public WebApplication.Areas.admin.Controllers.SliderController Slider = new WebApplication.Areas.admin.Controllers.T4MVC_SliderController();
        public T4MVC.admin.SharedController Shared = new T4MVC.admin.SharedController();
    }
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_WebApplicationCapchaImagePersian_Models_CaptchaImageResult : WebApplicationCapchaImagePersian.Models.CaptchaImageResult, IT4MVCActionResult
{
    public T4MVC_WebApplicationCapchaImagePersian_Models_CaptchaImageResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_PartialViewResult : System.Web.Mvc.PartialViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_PartialViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ViewResult : System.Web.Mvc.ViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ContentResult : System.Web.Mvc.ContentResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ContentResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class adjs {
            private const string URLPATH = "~/Scripts/adjs";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string ajax_loading_partial_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ajax_loading_partial.min.js") ? Url("ajax_loading_partial.min.js") : Url("ajax_loading_partial.js");
            public static readonly string ajaxfileupload_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ajaxfileupload.min.js") ? Url("ajaxfileupload.min.js") : Url("ajaxfileupload.js");
            public static readonly string bootbox_min_js = Url("bootbox.min.js");
            public static readonly string bootstrap_filestyle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-filestyle.min.js") ? Url("bootstrap-filestyle.min.js") : Url("bootstrap-filestyle.js");
            public static readonly string bootstrap_select_min_js = Url("bootstrap-select.min.js");
            public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
            public static readonly string custom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/custom.min.js") ? Url("custom.min.js") : Url("custom.js");
            public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
            public static readonly string froala_editor_min_js = Url("froala_editor.min.js");
            public static readonly string jquery_1_10_1_min_js = Url("jquery-1.10.1.min.js");
            public static readonly string jquery_1_10_2_min_js = Url("jquery-1.10.2.min.js");
            public static readonly string jquery_1_11_1_min_js = Url("jquery-1.11.1.min.js");
            public static readonly string jquery_2_1_1_min_js = Url("jquery-2.1.1.min.js");
            public static readonly string jquery_infiniti_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-infiniti.min.js") ? Url("jquery-infiniti.min.js") : Url("jquery-infiniti.js");
            public static readonly string jquery_lightbox_0_5_min_js = Url("jquery.lightbox-0.5.min.js");
            public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
            public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
            public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
            public static readonly string moda_select_file_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/moda_select_file.min.js") ? Url("moda_select_file.min.js") : Url("moda_select_file.js");
            public static readonly string scriptAdmin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scriptAdmin.min.js") ? Url("scriptAdmin.min.js") : Url("scriptAdmin.js");
            public static readonly string ScriptMasterPage_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ScriptMasterPage.min.js") ? Url("ScriptMasterPage.min.js") : Url("ScriptMasterPage.js");
        }
    
        public static readonly string bootstrap_filestyle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-filestyle.min.js") ? Url("bootstrap-filestyle.min.js") : Url("bootstrap-filestyle.js");
        public static readonly string bootstrap_rtl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-rtl.min.js") ? Url("bootstrap-rtl.min.js") : Url("bootstrap-rtl.js");
        public static readonly string bootstrap_switch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-switch.min.js") ? Url("bootstrap-switch.min.js") : Url("bootstrap-switch.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Highcharts_4_0_1 {
            private const string URLPATH = "~/Scripts/Highcharts-4.0.1";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class js {
                private const string URLPATH = "~/Scripts/Highcharts-4.0.1/js";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class adapters {
                    private const string URLPATH = "~/Scripts/Highcharts-4.0.1/js/adapters";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string standalone_framework_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/standalone-framework.min.js") ? Url("standalone-framework.min.js") : Url("standalone-framework.js");
                    public static readonly string standalone_framework_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/standalone-framework.src.min.js") ? Url("standalone-framework.src.min.js") : Url("standalone-framework.src.js");
                }
            
                public static readonly string highcharts_3d_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/highcharts-3d.min.js") ? Url("highcharts-3d.min.js") : Url("highcharts-3d.js");
                public static readonly string highcharts_3d_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/highcharts-3d.src.min.js") ? Url("highcharts-3d.src.min.js") : Url("highcharts-3d.src.js");
                public static readonly string highcharts_all_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/highcharts-all.min.js") ? Url("highcharts-all.min.js") : Url("highcharts-all.js");
                public static readonly string highcharts_more_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/highcharts-more.min.js") ? Url("highcharts-more.min.js") : Url("highcharts-more.js");
                public static readonly string highcharts_more_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/highcharts-more.src.min.js") ? Url("highcharts-more.src.min.js") : Url("highcharts-more.src.js");
                public static readonly string highcharts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/highcharts.min.js") ? Url("highcharts.min.js") : Url("highcharts.js");
                public static readonly string highcharts_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/highcharts.src.min.js") ? Url("highcharts.src.min.js") : Url("highcharts.src.js");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class modules {
                    private const string URLPATH = "~/Scripts/Highcharts-4.0.1/js/modules";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string canvas_tools_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/canvas-tools.min.js") ? Url("canvas-tools.min.js") : Url("canvas-tools.js");
                    public static readonly string canvas_tools_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/canvas-tools.src.min.js") ? Url("canvas-tools.src.min.js") : Url("canvas-tools.src.js");
                    public static readonly string data_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/data.min.js") ? Url("data.min.js") : Url("data.js");
                    public static readonly string data_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/data.src.min.js") ? Url("data.src.min.js") : Url("data.src.js");
                    public static readonly string drilldown_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/drilldown.min.js") ? Url("drilldown.min.js") : Url("drilldown.js");
                    public static readonly string drilldown_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/drilldown.src.min.js") ? Url("drilldown.src.min.js") : Url("drilldown.src.js");
                    public static readonly string exporting_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/exporting.min.js") ? Url("exporting.min.js") : Url("exporting.js");
                    public static readonly string exporting_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/exporting.src.min.js") ? Url("exporting.src.min.js") : Url("exporting.src.js");
                    public static readonly string funnel_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/funnel.min.js") ? Url("funnel.min.js") : Url("funnel.js");
                    public static readonly string funnel_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/funnel.src.min.js") ? Url("funnel.src.min.js") : Url("funnel.src.js");
                    public static readonly string heatmap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/heatmap.min.js") ? Url("heatmap.min.js") : Url("heatmap.js");
                    public static readonly string heatmap_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/heatmap.src.min.js") ? Url("heatmap.src.min.js") : Url("heatmap.src.js");
                    public static readonly string no_data_to_display_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no-data-to-display.min.js") ? Url("no-data-to-display.min.js") : Url("no-data-to-display.js");
                    public static readonly string no_data_to_display_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no-data-to-display.src.min.js") ? Url("no-data-to-display.src.min.js") : Url("no-data-to-display.src.js");
                    public static readonly string solid_gauge_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/solid-gauge.min.js") ? Url("solid-gauge.min.js") : Url("solid-gauge.js");
                    public static readonly string solid_gauge_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/solid-gauge.src.min.js") ? Url("solid-gauge.src.min.js") : Url("solid-gauge.src.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class themes {
                    private const string URLPATH = "~/Scripts/Highcharts-4.0.1/js/themes";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dark_blue_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dark-blue.min.js") ? Url("dark-blue.min.js") : Url("dark-blue.js");
                    public static readonly string dark_green_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dark-green.min.js") ? Url("dark-green.min.js") : Url("dark-green.js");
                    public static readonly string dark_unica_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dark-unica.min.js") ? Url("dark-unica.min.js") : Url("dark-unica.js");
                    public static readonly string gray_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gray.min.js") ? Url("gray.min.js") : Url("gray.js");
                    public static readonly string grid_light_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid-light.min.js") ? Url("grid-light.min.js") : Url("grid-light.js");
                    public static readonly string grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.min.js") ? Url("grid.min.js") : Url("grid.js");
                    public static readonly string sand_signika_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sand-signika.min.js") ? Url("sand-signika.min.js") : Url("sand-signika.js");
                    public static readonly string skies_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skies.min.js") ? Url("skies.min.js") : Url("skies.js");
                }
            
            }
        
        }
    
        public static readonly string jquery_1_10_2_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.10.2.intellisense.min.js") ? Url("jquery-1.10.2.intellisense.min.js") : Url("jquery-1.10.2.intellisense.js");
        public static readonly string jquery_1_10_2_min_map = Url("jquery-1.10.2.min.map");
        public static readonly string jquery_1_8_2_min_js = Url("jquery-1.8.2.min.js");
        public static readonly string jquery_infiniti_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-infiniti.min.js") ? Url("jquery-infiniti.min.js") : Url("jquery-infiniti.js");
        public static readonly string jquery_loader_information_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-loader-information.min.js") ? Url("jquery-loader-information.min.js") : Url("jquery-loader-information.js");
        public static readonly string jquery_scroll_infiniti_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-scroll-infiniti.min.js") ? Url("jquery-scroll-infiniti.min.js") : Url("jquery-scroll-infiniti.js");
        public static readonly string jquery_ui_1_10_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.10.1.min.js") ? Url("jquery-ui-1.10.1.min.js") : Url("jquery-ui-1.10.1.js");
        public static readonly string jquery_ui_1_10_1_min_js = Url("jquery-ui-1.10.1.min.js");
        public static readonly string jquery_signalR_2_0_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.signalR-2.0.2.min.js") ? Url("jquery.signalR-2.0.2.min.js") : Url("jquery.signalR-2.0.2.js");
        public static readonly string jquery_signalR_2_0_2_min_js = Url("jquery.signalR-2.0.2.min.js");
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string kendo_modernizr_custom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/kendo.modernizr.custom.min.js") ? Url("kendo.modernizr.custom.min.js") : Url("kendo.modernizr.custom.js");
        public static readonly string loader_information_product_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/loader-information-product.min.js") ? Url("loader-information-product.min.js") : Url("loader-information-product.js");
        public static readonly string modernizr_2_6_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.6.2.min.js") ? Url("modernizr-2.6.2.min.js") : Url("modernizr-2.6.2.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Notify {
            private const string URLPATH = "~/Scripts/Notify";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string jquery_noty_packaged_min_js = Url("jquery.noty.packaged.min.js");
        }
    
        public static readonly string PersianDatePicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PersianDatePicker.min.js") ? Url("PersianDatePicker.min.js") : Url("PersianDatePicker.js");
        public static readonly string PersianDatePicker_min_js = Url("PersianDatePicker.min.js");
        public static readonly string respond_min_js = Url("respond.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Slider {
            private const string URLPATH = "~/Scripts/Slider";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string ideal_image_slider_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ideal-image-slider.min.js") ? Url("ideal-image-slider.min.js") : Url("ideal-image-slider.js");
            public static readonly string iis_captions_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/iis-captions.min.js") ? Url("iis-captions.min.js") : Url("iis-captions.js");
        }
    
        public static readonly string sweet_alert_min_js = Url("sweet-alert.min.js");
        public static readonly string toastr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toastr.min.js") ? Url("toastr.min.js") : Url("toastr.js");
        public static readonly string toastr_min_js = Url("toastr.min.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class adcss {
            private const string URLPATH = "~/Content/adcss";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string bootstrap_override_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-override.min.css") ? Url("bootstrap-override.min.css") : Url("bootstrap-override.css");
                 
            public static readonly string bootstrap_select_rtl_min_css = Url("bootstrap-select-rtl.min.css");
            public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
            public static readonly string froala_editor_min_css = Url("froala_editor.min.css");
            public static readonly string jquery_lightbox_0_5_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.lightbox-0.5.min.css") ? Url("jquery.lightbox-0.5.min.css") : Url("jquery.lightbox-0.5.css");
                 
            public static readonly string site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/site.min.css") ? Url("site.min.css") : Url("site.css");
                 
            public static readonly string style_default_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/style.default.min.css") ? Url("style.default.min.css") : Url("style.default.css");
                 
            public static readonly string weather_icons_min_css = Url("weather-icons.min.css");
        }
    
        public static readonly string bootstrap_rtl_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-rtl.min.css") ? Url("bootstrap-rtl.min.css") : Url("bootstrap-rtl.css");
             
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class css {
            private const string URLPATH = "~/Content/css";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string bootstrap_switch_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-switch.min.css") ? Url("bootstrap-switch.min.css") : Url("bootstrap-switch.css");
                 
            public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
                 
            public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
            public static readonly string lastCssBootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lastCssBootstrap.min.css") ? Url("lastCssBootstrap.min.css") : Url("lastCssBootstrap.css");
                 
            public static readonly string site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/site.min.css") ? Url("site.min.css") : Url("site.css");
                 
            public static readonly string yamm_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/yamm.min.css") ? Url("yamm.min.css") : Url("yamm.css");
                 
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fonts {
            private const string URLPATH = "~/Content/fonts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string eramFont_eot = Url("eramFont.eot");
            public static readonly string eramFont_otf = Url("eramFont.otf");
            public static readonly string eramFont_ttf = Url("eramFont.ttf");
            public static readonly string eramFont_woff = Url("eramFont.woff");
            public static readonly string fontawesome_webfont_woff = Url("fontawesome-webfont.woff");
            public static readonly string glyphicons_halflings_regular_eot = Url("glyphicons-halflings-regular.eot");
            public static readonly string glyphicons_halflings_regular_svg = Url("glyphicons-halflings-regular.svg");
            public static readonly string glyphicons_halflings_regular_ttf = Url("glyphicons-halflings-regular.ttf");
            public static readonly string glyphicons_halflings_regular_woff = Url("glyphicons-halflings-regular.woff");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Images {
            private const string URLPATH = "~/Content/Images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Company {
                private const string URLPATH = "~/Content/Images/Company";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string NoImage_2_jpg = Url("NoImage_2.jpg");
                public static readonly string NoImage_Samll_jpg = Url("NoImage_Samll.jpg");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class lightBox {
                private const string URLPATH = "~/Content/Images/lightBox";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string lightbox_blank_gif = Url("lightbox-blank.gif");
                public static readonly string lightbox_btn_close_gif = Url("lightbox-btn-close.gif");
                public static readonly string lightbox_btn_next_gif = Url("lightbox-btn-next.gif");
                public static readonly string lightbox_btn_prev_gif = Url("lightbox-btn-prev.gif");
                public static readonly string lightbox_ico_loading_gif = Url("lightbox-ico-loading.gif");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Main {
                private const string URLPATH = "~/Content/Images/Main";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _mainLogo_png = Url("_mainLogo.png");
                public static readonly string _719_2_GIF = Url("719 2.GIF");
                public static readonly string _725_GIF = Url("725.GIF");
                public static readonly string arrow_4_png = Url("arrow-4.png");
                public static readonly string arrow_Sliderpng_gif = Url("arrow-Sliderpng.gif");
                public static readonly string change_paasword_icon_png = Url("change_paasword_icon.png");
                public static readonly string eramwebLogo_png = Url("eramwebLogo.png");
                public static readonly string facebook_png = Url("facebook.png");
                public static readonly string feed_png = Url("feed.png");
                public static readonly string google_plus_png = Url("google_plus.png");
                public static readonly string imageLogo_png = Url("imageLogo.png");
                public static readonly string LoadingAdmin_gif = Url("LoadingAdmin.gif");
                public static readonly string loadingAnimation_gif = Url("loadingAnimation.gif");
                public static readonly string loadingInfiniti_gif = Url("loadingInfiniti.gif");
                public static readonly string Loadnig_GIF = Url("Loadnig.GIF");
                public static readonly string loadningMeidum_GIF = Url("loadningMeidum.GIF");
                public static readonly string loadningSamall_GIF = Url("loadningSamall.GIF");
                public static readonly string logo___gif = Url("logo__.gif");
                public static readonly string logoo___gif = Url("logoo__.gif");
                public static readonly string logoVSEramWeb_png = Url("logoVSEramWeb.png");
                public static readonly string NoImage_1_jpg = Url("NoImage_1.jpg");
                public static readonly string NoImage_2_jpg = Url("NoImage_2.jpg");
                public static readonly string preloader_gif = Url("preloader.gif");
                public static readonly string register_icon_png = Url("register_icon.png");
                public static readonly string reset_paasword_icon_png = Url("reset_paasword_icon.png");
                public static readonly string sure_png = Url("sure.png");
                public static readonly string twitter_png = Url("twitter.png");
                public static readonly string user_png = Url("user.png");
                public static readonly string youtube_icon_png = Url("youtube-icon.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Package {
                private const string URLPATH = "~/Content/Images/Package";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string NoImage_2_jpg = Url("NoImage_2.jpg");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Product {
                private const string URLPATH = "~/Content/Images/Product";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class GallerySize {
                    private const string URLPATH = "~/Content/Images/Product/GallerySize";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class MainSize {
                    private const string URLPATH = "~/Content/Images/Product/MainSize";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ThumbLine_New {
                    private const string URLPATH = "~/Content/Images/Product/ThumbLine_New";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ThumbLine_Offer {
                    private const string URLPATH = "~/Content/Images/Product/ThumbLine_Offer";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Slider {
                private const string URLPATH = "~/Content/Images/Slider";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Notify {
            private const string URLPATH = "~/Content/Notify";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string animate_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/animate.min.css") ? Url("animate.min.css") : Url("animate.css");
                 
            public static readonly string buttons_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/buttons.min.css") ? Url("buttons.min.css") : Url("buttons.css");
                 
            public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
        }
    
        public static readonly string PersianDatePicker_min_css = Url("PersianDatePicker.min.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Slider {
            private const string URLPATH = "~/Content/Slider";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string default_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.css") ? Url("default.min.css") : Url("default.css");
                 
            public static readonly string ideal_image_slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ideal-image-slider.min.css") ? Url("ideal-image-slider.min.css") : Url("ideal-image-slider.css");
                 
            public static readonly string normalize_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/normalize.min.css") ? Url("normalize.min.css") : Url("normalize.css");
                 
        }
    
        public static readonly string sweet_alert_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sweet-alert.min.css") ? Url("sweet-alert.min.css") : Url("sweet-alert.css");
             
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class themes {
            private const string URLPATH = "~/Content/themes";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class @base {
                private const string URLPATH = "~/Content/themes/base";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/Content/themes/base/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string animated_overlay_gif = Url("animated-overlay.gif");
                    public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                    public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                    public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                    public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                    public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                    public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                    public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                    public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                    public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                    public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                    public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                    public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                    public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                }
            
                public static readonly string jquery_ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui.min.css") ? Url("jquery-ui.min.css") : Url("jquery-ui.css");
                     
                public static readonly string jquery_ui_accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.accordion.min.css") ? Url("jquery.ui.accordion.min.css") : Url("jquery.ui.accordion.css");
                     
                public static readonly string jquery_ui_all_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.all.min.css") ? Url("jquery.ui.all.min.css") : Url("jquery.ui.all.css");
                     
                public static readonly string jquery_ui_autocomplete_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.autocomplete.min.css") ? Url("jquery.ui.autocomplete.min.css") : Url("jquery.ui.autocomplete.css");
                     
                public static readonly string jquery_ui_base_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.base.min.css") ? Url("jquery.ui.base.min.css") : Url("jquery.ui.base.css");
                     
                public static readonly string jquery_ui_button_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.button.min.css") ? Url("jquery.ui.button.min.css") : Url("jquery.ui.button.css");
                     
                public static readonly string jquery_ui_core_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.core.min.css") ? Url("jquery.ui.core.min.css") : Url("jquery.ui.core.css");
                     
                public static readonly string jquery_ui_datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.datepicker.min.css") ? Url("jquery.ui.datepicker.min.css") : Url("jquery.ui.datepicker.css");
                     
                public static readonly string jquery_ui_dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.dialog.min.css") ? Url("jquery.ui.dialog.min.css") : Url("jquery.ui.dialog.css");
                     
                public static readonly string jquery_ui_menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.menu.min.css") ? Url("jquery.ui.menu.min.css") : Url("jquery.ui.menu.css");
                     
                public static readonly string jquery_ui_progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.progressbar.min.css") ? Url("jquery.ui.progressbar.min.css") : Url("jquery.ui.progressbar.css");
                     
                public static readonly string jquery_ui_resizable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.resizable.min.css") ? Url("jquery.ui.resizable.min.css") : Url("jquery.ui.resizable.css");
                     
                public static readonly string jquery_ui_selectable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.selectable.min.css") ? Url("jquery.ui.selectable.min.css") : Url("jquery.ui.selectable.css");
                     
                public static readonly string jquery_ui_slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.slider.min.css") ? Url("jquery.ui.slider.min.css") : Url("jquery.ui.slider.css");
                     
                public static readonly string jquery_ui_spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.spinner.min.css") ? Url("jquery.ui.spinner.min.css") : Url("jquery.ui.spinner.css");
                     
                public static readonly string jquery_ui_tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.tabs.min.css") ? Url("jquery.ui.tabs.min.css") : Url("jquery.ui.tabs.css");
                     
                public static readonly string jquery_ui_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.theme.min.css") ? Url("jquery.ui.theme.min.css") : Url("jquery.ui.theme.css");
                     
                public static readonly string jquery_ui_tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.tooltip.min.css") ? Url("jquery.ui.tooltip.min.css") : Url("jquery.ui.tooltip.css");
                     
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class minified {
                    private const string URLPATH = "~/Content/themes/base/minified";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/themes/base/minified/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string animated_overlay_gif = Url("animated-overlay.gif");
                        public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                        public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                        public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                        public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                        public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                        public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                        public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                        public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                        public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                        public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                        public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                        public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                        public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                    }
                
                    public static readonly string jquery_ui_min_css = Url("jquery-ui.min.css");
                    public static readonly string jquery_ui_accordion_min_css = Url("jquery.ui.accordion.min.css");
                    public static readonly string jquery_ui_autocomplete_min_css = Url("jquery.ui.autocomplete.min.css");
                    public static readonly string jquery_ui_button_min_css = Url("jquery.ui.button.min.css");
                    public static readonly string jquery_ui_core_min_css = Url("jquery.ui.core.min.css");
                    public static readonly string jquery_ui_datepicker_min_css = Url("jquery.ui.datepicker.min.css");
                    public static readonly string jquery_ui_dialog_min_css = Url("jquery.ui.dialog.min.css");
                    public static readonly string jquery_ui_menu_min_css = Url("jquery.ui.menu.min.css");
                    public static readonly string jquery_ui_progressbar_min_css = Url("jquery.ui.progressbar.min.css");
                    public static readonly string jquery_ui_resizable_min_css = Url("jquery.ui.resizable.min.css");
                    public static readonly string jquery_ui_selectable_min_css = Url("jquery.ui.selectable.min.css");
                    public static readonly string jquery_ui_slider_min_css = Url("jquery.ui.slider.min.css");
                    public static readonly string jquery_ui_spinner_min_css = Url("jquery.ui.spinner.min.css");
                    public static readonly string jquery_ui_tabs_min_css = Url("jquery.ui.tabs.min.css");
                    public static readonly string jquery_ui_theme_min_css = Url("jquery.ui.theme.min.css");
                    public static readonly string jquery_ui_tooltip_min_css = Url("jquery.ui.tooltip.min.css");
                }
            
            }
        
        }
    
        public static readonly string toastr_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toastr.min.css") ? Url("toastr.min.css") : Url("toastr.css");
             
        public static readonly string toastr_less = Url("toastr.less");
        public static readonly string toastr_min_css = Url("toastr.min.css");
        public static readonly string toastr_scss = Url("toastr.scss");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Scripts {}
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Styles {}
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009


