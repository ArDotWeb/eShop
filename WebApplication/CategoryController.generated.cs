// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
#pragma warning disable 1591, 3008, 3009
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace WebApplication.Controllers
{
    public partial class CategoryController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CategoryController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Show()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Show);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetDataTable()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetDataTable);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetAllSubCategory()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAllSubCategory);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CategoryController Actions { get { return MVC.Category; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Category";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Category";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Show = "Show";
            public readonly string GetDataTable = "GetDataTable";
            public readonly string GetAllSubCategory = "GetAllSubCategory";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Show = "Show";
            public const string GetDataTable = "GetDataTable";
            public const string GetAllSubCategory = "GetAllSubCategory";
        }


        static readonly ActionParamsClass_Show s_params_Show = new ActionParamsClass_Show();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Show ShowParams { get { return s_params_Show; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Show
        {
            public readonly string categoryId = "categoryId";
            public readonly string categoryName = "categoryName";
        }
        static readonly ActionParamsClass_GetDataTable s_params_GetDataTable = new ActionParamsClass_GetDataTable();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetDataTable GetDataTableParams { get { return s_params_GetDataTable; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetDataTable
        {
            public readonly string arrayCategory = "arrayCategory";
            public readonly string arrayCompany = "arrayCompany";
            public readonly string search = "search";
            public readonly string order = "order";
            public readonly string term = "term";
            public readonly string count = "count";
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_GetAllSubCategory s_params_GetAllSubCategory = new ActionParamsClass_GetAllSubCategory();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAllSubCategory GetAllSubCategoryParams { get { return s_params_GetAllSubCategory; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAllSubCategory
        {
            public readonly string Id = "Id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _DataTableCategory = "_DataTableCategory";
                public readonly string Show = "Show";
            }
            public readonly string _DataTableCategory = "~/Views/Category/_DataTableCategory.cshtml";
            public readonly string Show = "~/Views/Category/Show.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_CategoryController : WebApplication.Controllers.CategoryController
    {
        public T4MVC_CategoryController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ShowOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? categoryId, string categoryName);

        [NonAction]
        public override System.Web.Mvc.ActionResult Show(int? categoryId, string categoryName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Show);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryId", categoryId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryName", categoryName);
            ShowOverride(callInfo, categoryId, categoryName);
            return callInfo;
        }

        [NonAction]
        partial void GetDataTableOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string arrayCategory, string arrayCompany, string search, string order, string term, int count, int page);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetDataTable(string arrayCategory, string arrayCompany, string search, string order, string term, int count, int page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetDataTable);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "arrayCategory", arrayCategory);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "arrayCompany", arrayCompany);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "search", search);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "order", order);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "count", count);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            GetDataTableOverride(callInfo, arrayCategory, arrayCompany, search, order, term, count, page);
            return callInfo;
        }

        [NonAction]
        partial void GetAllSubCategoryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? Id);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetAllSubCategory(int? Id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAllSubCategory);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Id", Id);
            GetAllSubCategoryOverride(callInfo, Id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009
