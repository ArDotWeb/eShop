// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
#pragma warning disable 1591, 3008, 3009
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace WebApplication.Controllers
{
    public partial class CompanyController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CompanyController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DetailsCompany()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DetailsCompany);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddCompanyToCart()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddCompanyToCart);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult InfoProductCompanySales()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.InfoProductCompanySales);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CompanyController Actions { get { return MVC.Company; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Company";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Company";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string DetailsCompany = "DetailsCompany";
            public readonly string AddCompanyToCart = "AddCompanyToCart";
            public readonly string InfoProductCompanySales = "InfoProductCompanySales";
            public readonly string List = "List";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string DetailsCompany = "DetailsCompany";
            public const string AddCompanyToCart = "AddCompanyToCart";
            public const string InfoProductCompanySales = "InfoProductCompanySales";
            public const string List = "List";
        }


        static readonly ActionParamsClass_DetailsCompany s_params_DetailsCompany = new ActionParamsClass_DetailsCompany();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DetailsCompany DetailsCompanyParams { get { return s_params_DetailsCompany; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DetailsCompany
        {
            public readonly string companyId = "companyId";
            public readonly string companyName = "companyName";
        }
        static readonly ActionParamsClass_AddCompanyToCart s_params_AddCompanyToCart = new ActionParamsClass_AddCompanyToCart();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddCompanyToCart AddCompanyToCartParams { get { return s_params_AddCompanyToCart; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddCompanyToCart
        {
            public readonly string company_Id = "company_Id";
            public readonly string name = "name";
        }
        static readonly ActionParamsClass_InfoProductCompanySales s_params_InfoProductCompanySales = new ActionParamsClass_InfoProductCompanySales();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_InfoProductCompanySales InfoProductCompanySalesParams { get { return s_params_InfoProductCompanySales; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_InfoProductCompanySales
        {
            public readonly string id = "id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _InforProductCompanySales = "_InforProductCompanySales";
                public readonly string DetailsCompany = "DetailsCompany";
                public readonly string List = "List";
            }
            public readonly string _InforProductCompanySales = "~/Views/Company/_InforProductCompanySales.cshtml";
            public readonly string DetailsCompany = "~/Views/Company/DetailsCompany.cshtml";
            public readonly string List = "~/Views/Company/List.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_CompanyController : WebApplication.Controllers.CompanyController
    {
        public T4MVC_CompanyController() : base(Dummy.Instance) { }

        [NonAction]
        partial void DetailsCompanyOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? companyId, string companyName);

        [NonAction]
        public override System.Web.Mvc.ActionResult DetailsCompany(int? companyId, string companyName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DetailsCompany);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "companyId", companyId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "companyName", companyName);
            DetailsCompanyOverride(callInfo, companyId, companyName);
            return callInfo;
        }

        [NonAction]
        partial void AddCompanyToCartOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int company_Id, string name);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddCompanyToCart(int company_Id, string name)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddCompanyToCart);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "company_Id", company_Id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "name", name);
            AddCompanyToCartOverride(callInfo, company_Id, name);
            return callInfo;
        }

        [NonAction]
        partial void InfoProductCompanySalesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult InfoProductCompanySales(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.InfoProductCompanySales);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            InfoProductCompanySalesOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void ListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult List()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.List);
            ListOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009
