// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
#pragma warning disable 1591, 3008, 3009
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace WebApplication.Areas.admin.Controllers
{
    public partial class CompanyController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CompanyController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DetailsCompany()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DetailsCompany);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateCompany()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateCompany);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.PartialViewResult DelteCompany()
        {
            return new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.DelteCompany);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult CheckName()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckName);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult CheckAddress()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckAddress);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult CheckNameEdit()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckNameEdit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult CheckAddressEdit()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckAddressEdit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetNameForAutoComplete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNameForAutoComplete);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CompanyController Actions { get { return MVC.admin.Company; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "admin";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Company";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Company";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string SearchCompany = "SearchCompany";
            public readonly string DataCompany = "DataCompany";
            public readonly string DetailsCompany = "DetailsCompany";
            public readonly string UpdateCompany = "UpdateCompany";
            public readonly string CreateCompany = "CreateCompany";
            public readonly string DelteCompany = "DelteCompany";
            public readonly string CheckName = "CheckName";
            public readonly string CheckAddress = "CheckAddress";
            public readonly string CheckNameEdit = "CheckNameEdit";
            public readonly string CheckAddressEdit = "CheckAddressEdit";
            public readonly string GetNameForAutoComplete = "GetNameForAutoComplete";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string SearchCompany = "SearchCompany";
            public const string DataCompany = "DataCompany";
            public const string DetailsCompany = "DetailsCompany";
            public const string UpdateCompany = "UpdateCompany";
            public const string CreateCompany = "CreateCompany";
            public const string DelteCompany = "DelteCompany";
            public const string CheckName = "CheckName";
            public const string CheckAddress = "CheckAddress";
            public const string CheckNameEdit = "CheckNameEdit";
            public const string CheckAddressEdit = "CheckAddressEdit";
            public const string GetNameForAutoComplete = "GetNameForAutoComplete";
        }


        static readonly ActionParamsClass_DataCompany s_params_DataCompany = new ActionParamsClass_DataCompany();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DataCompany DataCompanyParams { get { return s_params_DataCompany; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DataCompany
        {
            public readonly string term = "term";
            public readonly string count = "count";
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_DetailsCompany s_params_DetailsCompany = new ActionParamsClass_DetailsCompany();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DetailsCompany DetailsCompanyParams { get { return s_params_DetailsCompany; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DetailsCompany
        {
            public readonly string Id = "Id";
        }
        static readonly ActionParamsClass_UpdateCompany s_params_UpdateCompany = new ActionParamsClass_UpdateCompany();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateCompany UpdateCompanyParams { get { return s_params_UpdateCompany; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateCompany
        {
            public readonly string Id = "Id";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_CreateCompany s_params_CreateCompany = new ActionParamsClass_CreateCompany();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateCompany CreateCompanyParams { get { return s_params_CreateCompany; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateCompany
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_DelteCompany s_params_DelteCompany = new ActionParamsClass_DelteCompany();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DelteCompany DelteCompanyParams { get { return s_params_DelteCompany; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DelteCompany
        {
            public readonly string Id = "Id";
        }
        static readonly ActionParamsClass_CheckName s_params_CheckName = new ActionParamsClass_CheckName();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CheckName CheckNameParams { get { return s_params_CheckName; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CheckName
        {
            public readonly string Name = "Name";
        }
        static readonly ActionParamsClass_CheckAddress s_params_CheckAddress = new ActionParamsClass_CheckAddress();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CheckAddress CheckAddressParams { get { return s_params_CheckAddress; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CheckAddress
        {
            public readonly string Address = "Address";
        }
        static readonly ActionParamsClass_CheckNameEdit s_params_CheckNameEdit = new ActionParamsClass_CheckNameEdit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CheckNameEdit CheckNameEditParams { get { return s_params_CheckNameEdit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CheckNameEdit
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_CheckAddressEdit s_params_CheckAddressEdit = new ActionParamsClass_CheckAddressEdit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CheckAddressEdit CheckAddressEditParams { get { return s_params_CheckAddressEdit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CheckAddressEdit
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_GetNameForAutoComplete s_params_GetNameForAutoComplete = new ActionParamsClass_GetNameForAutoComplete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNameForAutoComplete GetNameForAutoCompleteParams { get { return s_params_GetNameForAutoComplete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNameForAutoComplete
        {
            public readonly string term = "term";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _DataCompany = "_DataCompany";
                public readonly string _SearchCompany = "_SearchCompany";
                public readonly string _SolidHeaderCompany = "_SolidHeaderCompany";
                public readonly string CreateCompany = "CreateCompany";
                public readonly string DetailsCompany = "DetailsCompany";
                public readonly string Index = "Index";
                public readonly string UpdateCompany = "UpdateCompany";
            }
            public readonly string _DataCompany = "~/Areas/admin/Views/Company/_DataCompany.cshtml";
            public readonly string _SearchCompany = "~/Areas/admin/Views/Company/_SearchCompany.cshtml";
            public readonly string _SolidHeaderCompany = "~/Areas/admin/Views/Company/_SolidHeaderCompany.cshtml";
            public readonly string CreateCompany = "~/Areas/admin/Views/Company/CreateCompany.cshtml";
            public readonly string DetailsCompany = "~/Areas/admin/Views/Company/DetailsCompany.cshtml";
            public readonly string Index = "~/Areas/admin/Views/Company/Index.cshtml";
            public readonly string UpdateCompany = "~/Areas/admin/Views/Company/UpdateCompany.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_CompanyController : WebApplication.Areas.admin.Controllers.CompanyController
    {
        public T4MVC_CompanyController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SearchCompanyOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult SearchCompany()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SearchCompany);
            SearchCompanyOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void DataCompanyOverride(T4MVC_System_Web_Mvc_PartialViewResult callInfo, string term, int count, int page);

        [NonAction]
        public override System.Web.Mvc.PartialViewResult DataCompany(string term, int count, int page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.DataCompany);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "count", count);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            DataCompanyOverride(callInfo, term, count, page);
            return callInfo;
        }

        [NonAction]
        partial void DetailsCompanyOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? Id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DetailsCompany(int? Id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DetailsCompany);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Id", Id);
            DetailsCompanyOverride(callInfo, Id);
            return callInfo;
        }

        [NonAction]
        partial void UpdateCompanyOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? Id);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateCompany(int? Id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateCompany);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Id", Id);
            UpdateCompanyOverride(callInfo, Id);
            return callInfo;
        }

        [NonAction]
        partial void UpdateCompanyOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, WebApplication.ViewModels.CompanyEditViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateCompany(WebApplication.ViewModels.CompanyEditViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateCompany);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            UpdateCompanyOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void CreateCompanyOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateCompany()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateCompany);
            CreateCompanyOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateCompanyOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, WebApplication.ViewModels.CompanyAddViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateCompany(WebApplication.ViewModels.CompanyAddViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateCompany);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            CreateCompanyOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void DelteCompanyOverride(T4MVC_System_Web_Mvc_PartialViewResult callInfo, int Id);

        [NonAction]
        public override System.Web.Mvc.PartialViewResult DelteCompany(int Id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.DelteCompany);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Id", Id);
            DelteCompanyOverride(callInfo, Id);
            return callInfo;
        }

        [NonAction]
        partial void CheckNameOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string Name);

        [NonAction]
        public override System.Web.Mvc.JsonResult CheckName(string Name)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Name", Name);
            CheckNameOverride(callInfo, Name);
            return callInfo;
        }

        [NonAction]
        partial void CheckAddressOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string Address);

        [NonAction]
        public override System.Web.Mvc.JsonResult CheckAddress(string Address)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckAddress);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Address", Address);
            CheckAddressOverride(callInfo, Address);
            return callInfo;
        }

        [NonAction]
        partial void CheckNameEditOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, eShop.WebApplication.DomainClasses.MainViewModel.ExistNameCompany model);

        [NonAction]
        public override System.Web.Mvc.JsonResult CheckNameEdit(eShop.WebApplication.DomainClasses.MainViewModel.ExistNameCompany model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckNameEdit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            CheckNameEditOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void CheckAddressEditOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, eShop.WebApplication.DomainClasses.MainViewModel.ExistAddressCompany model);

        [NonAction]
        public override System.Web.Mvc.JsonResult CheckAddressEdit(eShop.WebApplication.DomainClasses.MainViewModel.ExistAddressCompany model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckAddressEdit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            CheckAddressEditOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void GetNameForAutoCompleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string term);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNameForAutoComplete(string term)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNameForAutoComplete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            GetNameForAutoCompleteOverride(callInfo, term);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009
