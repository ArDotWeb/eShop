// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
#pragma warning disable 1591, 3008, 3009
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace WebApplication.Areas.admin.Controllers
{
    public partial class CityController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CityController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetCityByIdProvince()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCityByIdProvince);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateCity()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateCity);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.PartialViewResult DeleteCity()
        {
            return new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.DeleteCity);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult CheckName()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckName);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CityController Actions { get { return MVC.admin.City; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "admin";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "City";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "City";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string GetCityByIdProvince = "GetCityByIdProvince";
            public readonly string UpdateCity = "UpdateCity";
            public readonly string DeleteCity = "DeleteCity";
            public readonly string CreateCity = "CreateCity";
            public readonly string CheckName = "CheckName";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string GetCityByIdProvince = "GetCityByIdProvince";
            public const string UpdateCity = "UpdateCity";
            public const string DeleteCity = "DeleteCity";
            public const string CreateCity = "CreateCity";
            public const string CheckName = "CheckName";
        }


        static readonly ActionParamsClass_GetCityByIdProvince s_params_GetCityByIdProvince = new ActionParamsClass_GetCityByIdProvince();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCityByIdProvince GetCityByIdProvinceParams { get { return s_params_GetCityByIdProvince; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCityByIdProvince
        {
            public readonly string Id = "Id";
        }
        static readonly ActionParamsClass_UpdateCity s_params_UpdateCity = new ActionParamsClass_UpdateCity();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateCity UpdateCityParams { get { return s_params_UpdateCity; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateCity
        {
            public readonly string Id = "Id";
            public readonly string city = "city";
        }
        static readonly ActionParamsClass_DeleteCity s_params_DeleteCity = new ActionParamsClass_DeleteCity();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteCity DeleteCityParams { get { return s_params_DeleteCity; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteCity
        {
            public readonly string Id = "Id";
        }
        static readonly ActionParamsClass_CreateCity s_params_CreateCity = new ActionParamsClass_CreateCity();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateCity CreateCityParams { get { return s_params_CreateCity; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateCity
        {
            public readonly string cityViewModel = "cityViewModel";
        }
        static readonly ActionParamsClass_CheckName s_params_CheckName = new ActionParamsClass_CheckName();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CheckName CheckNameParams { get { return s_params_CheckName; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CheckName
        {
            public readonly string Name = "Name";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _solidHeaderCity = "_solidHeaderCity";
                public readonly string CreateCity = "CreateCity";
                public readonly string Index = "Index";
                public readonly string UpdateCity = "UpdateCity";
            }
            public readonly string _solidHeaderCity = "~/Areas/admin/Views/City/_solidHeaderCity.cshtml";
            public readonly string CreateCity = "~/Areas/admin/Views/City/CreateCity.cshtml";
            public readonly string Index = "~/Areas/admin/Views/City/Index.cshtml";
            public readonly string UpdateCity = "~/Areas/admin/Views/City/UpdateCity.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_CityController : WebApplication.Areas.admin.Controllers.CityController
    {
        public T4MVC_CityController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetCityByIdProvinceOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int Id);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetCityByIdProvince(int Id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCityByIdProvince);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Id", Id);
            GetCityByIdProvinceOverride(callInfo, Id);
            return callInfo;
        }

        [NonAction]
        partial void UpdateCityOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? Id);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateCity(int? Id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateCity);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Id", Id);
            UpdateCityOverride(callInfo, Id);
            return callInfo;
        }

        [NonAction]
        partial void UpdateCityOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, eShop.WebApplication.DomainClasses.AppClasses.City city);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateCity(eShop.WebApplication.DomainClasses.AppClasses.City city)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateCity);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "city", city);
            UpdateCityOverride(callInfo, city);
            return callInfo;
        }

        [NonAction]
        partial void DeleteCityOverride(T4MVC_System_Web_Mvc_PartialViewResult callInfo, int Id);

        [NonAction]
        public override System.Web.Mvc.PartialViewResult DeleteCity(int Id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.DeleteCity);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Id", Id);
            DeleteCityOverride(callInfo, Id);
            return callInfo;
        }

        [NonAction]
        partial void CreateCityOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateCity()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateCity);
            CreateCityOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateCityOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, WebApplication.ViewModels.CityAddViewModel cityViewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateCity(WebApplication.ViewModels.CityAddViewModel cityViewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateCity);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "cityViewModel", cityViewModel);
            CreateCityOverride(callInfo, cityViewModel);
            return callInfo;
        }

        [NonAction]
        partial void CheckNameOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string Name);

        [NonAction]
        public override System.Web.Mvc.JsonResult CheckName(string Name)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Name", Name);
            CheckNameOverride(callInfo, Name);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009
